jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: nvm
        name: Read .nvmrc
        run: echo "NVMRC_NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_OUTPUT
      - name: Use Node (.nvmrc)
        uses: actions/setup-node@v3
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC_NODE_VERSION }}'
      - name: Install dependencies
        run: yarn --offline --frozen-lockfile
      - name: Build esbuild-graphql-loader
        run: yarn build
      - name: Validate no changes
        run: git diff --exit-code
    timeout-minutes: 2
  commitlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v5
    timeout-minutes: 2
  eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: nvm
        name: Read .nvmrc
        run: echo "NVMRC_NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_OUTPUT
      - name: Use Node (.nvmrc)
        uses: actions/setup-node@v3
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC_NODE_VERSION }}'
      - name: Install dependencies
        run: yarn --offline --frozen-lockfile
      - name: Lint esbuild-graphql-loader
        run: yarn lint
    timeout-minutes: 2
  release:
    if: github.ref == 'refs/heads/master'
    needs: ['build', 'commitlint', 'eslint', 'test']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: nvm
        name: Read .nvmrc
        run: echo "NVMRC_NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_OUTPUT
      - name: Use Node (.nvmrc)
        uses: actions/setup-node@v3
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC_NODE_VERSION }}'
      - name: Install dependencies
        run: yarn --offline --frozen-lockfile
      - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        name: Release
        run: yarn release
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: nvm
        name: Read .nvmrc
        run: echo "NVMRC_NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_OUTPUT
      - name: Use Node (.nvmrc)
        uses: actions/setup-node@v3
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC_NODE_VERSION }}'
      - name: Install dependencies
        run: yarn --offline --frozen-lockfile
      - name: Test esbuild-graphql-loader
        run: yarn test
    timeout-minutes: 2
name: Continuous Integration
on: [pull_request]
